# Generated by Django 4.1.13 on 2023-12-06 00:02
from django.utils import timezone

import core.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


def create_hunt(apps, schema_editor):
    # Create a Hunt object if needed
    from core.models import Hunt, QrCode
    
    if QrCode.objects.count() == 0:
        return
    # COULD ERROR IF ONLY ONE QR OBJ EXISTS
    # WILL ERROR IF Class Hunt is changed...
    Hunt.objects.get_or_create(
        name="First Hunt",
        start=timezone.now() - timezone.timedelta(days=2),
        end=timezone.now(),
        starting_location=QrCode.objects.first(),
        ending_location=QrCode.objects.last(),
        form_url="https://forms.gle/eAghxHxWRiXWgeKF9",
        ending_text="You found Derek! Now, solve the entirety of the logic puzzle to find which of the 5 SAC members in question this locker belongs to {{here}}! Oh, and close the locker, a dead Derek smells bad.",
    )


def undo_create_hunt(apps, schema_editor):
    # Create a Hunt object if needed
    from core.models import Hunt
    
    try:
        Hunt.objects.get(name="First Hunt").delete()
    except (Hunt.DoesNotExist, django.db.utils.OperationalError):
        pass


class Migration(migrations.Migration):
    dependencies = [
        ("core", "0018_qrcode_image_url"),
    ]

    operations = [
        migrations.CreateModel(
            name="Hunt",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=64)),
                ("start", models.DateTimeField()),
                ("end", models.DateTimeField()),
                (
                    "max_team_size",
                    models.PositiveSmallIntegerField(
                        default=4, help_text="Max Team size"
                    ),
                ),
                (
                    "path_length",
                    models.PositiveSmallIntegerField(
                        default=13,
                        help_text="Length of the path: The amount of codes each time will have to find before the end. (not including start/end)",
                    ),
                ),
                (
                    "form_url",
                    models.URLField(
                        blank=True,
                        help_text="Google form to fill out after the hunt",
                        null=True,
                    ),
                ),
                (
                    "ending_text",
                    models.TextField(
                        help_text="Text to display after the hunt is over. If you want to include a url (e.g. a google form) at the end use text inside of double curly brackets {{ }} to show where the form will go. The text inside the brackets is what will be shown to the user. e.g. {{this form}}, users will only see 'this form' but can click it to get to the form specified above",
                        max_length=250,
                    ),
                ),
                (
                    "allow_creation_post_start",
                    models.BooleanField(
                        default=False,
                        help_text="Allow users to create teams after the hunt has started",
                    ),
                ),
            ],
        ),
        migrations.RemoveField(
            model_name="team",
            name="is_active",
        ),
        migrations.RemoveField(
            model_name="user",
            name="team",
        ),
        migrations.AddField(
            model_name="team",
            name="members",
            field=models.ManyToManyField(
                related_name="teams",
                related_query_name="teams",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="qrcode",
            name="key",
            field=models.CharField(
                default=core.models.generate_hint_key,
                help_text="Key to access the hint, used in the QR code ",
                max_length=64,
                unique=True,
            ),
        ),
        migrations.AddField(
            model_name="team",
            name="hunt",
            field=models.ForeignKey(
                default=1,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="teams",
                to="core.hunt",
            ),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="team",
            name="name",
            field=models.CharField(max_length=64, null=True),
        ),
        migrations.AddConstraint(
            model_name="team",
            constraint=models.UniqueConstraint(
                fields=("name", "hunt"), name="unique_team_name_per_hunt"
            ),
        ),
        migrations.AddField(
            model_name="hunt",
            name="ending_location",
            field=models.ForeignKey(
                blank=True,
                help_text="(Optional) A specified ending location for the hunt. All teams will get as their last location.",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="ending_location",
                to="core.qrcode",
            ),
        ),
        migrations.AddField(
            model_name="hunt",
            name="middle_locations",
            field=models.ManyToManyField(
                help_text="Possible locations that are not the start or end",
                related_name="hunt",
                to="core.qrcode",
            ),
        ),
        migrations.AddField(
            model_name="hunt",
            name="starting_location",
            field=models.ForeignKey(
                blank=True,
                help_text="(Optional) A specified starting location for the hunt. All teams will have to scan this QR code as their first.",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="starting_location",
                to="core.qrcode",
            ),
        ),
        migrations.AddField(
            model_name="hunt",
            name="testers",
            field=models.ManyToManyField(
                blank=True,
                help_text="Users that can access this hunt before it starts as well as after",
                related_name="testers",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.RunPython(create_hunt, reverse_code=undo_create_hunt),
        migrations.AddField(
            model_name="logicpuzzlehint",
            name="hunt",
            field=models.ForeignKey(
                default=1,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="logic_puzzle",
                to="core.hunt",
            ),
            preserve_default=False,
        ),
        migrations.AddConstraint(
            model_name="hunt",
            constraint=models.CheckConstraint(
                check=models.Q(("start__lt", models.F("end"))), name="start_before_end"
            ),
        ),
        migrations.AddConstraint(
            model_name="hunt",
            constraint=models.CheckConstraint(
                check=models.Q(
                    ("starting_location", models.F("ending_location")), _negated=True
                ),
                name="start_not_equal_end",
            ),
        ),
    ]
